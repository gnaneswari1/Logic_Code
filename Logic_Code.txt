from flask import Flask, render_template, request
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from joblib import load

app = Flask(__name__)

# Load the trained model
lr_model = load('Log_reg.joblib')

# Load the TF-IDF vectorizer
vectorizer = load('tfidf_vectorizer.joblib')

# Define function to predict spam
def predict_spam(url):
    # Make prediction
    X_input = vectorizer.transform([url])
    prediction = lr_model.predict(X_input)
    return prediction[0]

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        url_input = request.form['url_input']
        if url_input:
            # Make prediction
            prediction = predict_spam(url_input)
            if prediction:
                result = "This URL is classified as spam."
            else:
                result = "This URL is not spam."
            return render_template('index.html', result=result)
    return render_template('index.html', result=None)

if __name__ == '__main__':
    app.run(debug=True)
